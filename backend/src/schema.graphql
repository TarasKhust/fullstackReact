# This file was generated based on ".graphqlconfig.yml". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

"An object with an ID"
interface Node {
    "The id of the object."
    id: ID!
}

type AggregateItem {
    count: Int!
}

type CartItem implements Node {
    id: ID!
    item: Item
    quantity: Int!
    user: User!
}

type Item implements Node {
    description: String!
    id: ID!
    image: String
    largeImage: String
    price: Int!
    title: String!
    user: User!
}

"A connection to a list of items."
type ItemConnection {
    aggregate: AggregateItem!
    "A list of edges."
    edges: [ItemEdge]!
    "Information to aid in pagination."
    pageInfo: PageInfo!
}

"An edge in a connection."
type ItemEdge {
    "A cursor for use in pagination."
    cursor: String!
    "The item at the end of the edge."
    node: Item!
}

type Mutation {
    addToCart(id: ID!): CartItem
    createItem(description: String, image: String, largeImage: String, price: Int, title: String): Item!
    createOrder(token: String!): Order!
    deleteItem(id: ID!): Item
    removeFromCart(id: ID!): CartItem
    requestReset(email: String!): SuccessMessage
    resetPassword(confirmPassword: String!, password: String!, resetToken: String!): User!
    signin(email: String!, password: String!): User!
    signout: SuccessMessage
    signup(email: String!, name: String!, password: String!): User!
    updateItem(description: String, id: ID!, price: Int, title: String): Item!
    updatePermissions(permissions: [Permission], userId: ID!): User
}

type Order implements Node {
    charge: String!
    createdAt: DateTime!
    id: ID!
    items(after: String, before: String, first: Int, last: Int, orderBy: OrderItemOrderByInput, skip: Int, where: OrderItemWhereInput): [OrderItem!]
    total: Int!
    updatedAt: DateTime!
    user: User!
}

type OrderItem implements Node {
    description: String!
    id: ID!
    image: String!
    largeImage: String!
    price: Int!
    quantity: Int!
    title: String!
    user: User
}

"Information about pagination in a connection."
type PageInfo {
    "When paginating forwards, the cursor to continue."
    endCursor: String
    "When paginating forwards, are there more items?"
    hasNextPage: Boolean!
    "When paginating backwards, are there more items?"
    hasPreviousPage: Boolean!
    "When paginating backwards, the cursor to continue."
    startCursor: String
}

type Query {
    item(where: ItemWhereUniqueInput!): Item
    items(first: Int, orderBy: ItemOrderByInput, skip: Int, where: ItemWhereInput): [Item]!
    itemsConnection(where: ItemWhereInput): ItemConnection!
    me: User
    order(id: ID!): Order
    orders(orderBy: OrderOrderByInput): [Order]!
    users: [User]!
}

type SuccessMessage {
    message: String
}

type User {
    cart: [CartItem!]!
    email: String!
    id: ID!
    name: String!
    orders: [OrderItem]
    permissions: [Permission!]!
}

enum ItemOrderByInput {
    description_ASC
    description_DESC
    id_ASC
    id_DESC
    image_ASC
    image_DESC
    largeImage_ASC
    largeImage_DESC
    price_ASC
    price_DESC
    title_ASC
    title_DESC
}

enum OrderItemOrderByInput {
    description_ASC
    description_DESC
    id_ASC
    id_DESC
    image_ASC
    image_DESC
    largeImage_ASC
    largeImage_DESC
    price_ASC
    price_DESC
    quantity_ASC
    quantity_DESC
    title_ASC
    title_DESC
}

enum OrderOrderByInput {
    charge_ASC
    charge_DESC
    createdAt_ASC
    createdAt_DESC
    id_ASC
    id_DESC
    total_ASC
    total_DESC
    updatedAt_ASC
    updatedAt_DESC
}

enum Permission {
    ADMIN
    ITEMCREATE
    ITEMDELETE
    ITEMUPDATE
    PERMISSIONUPDATE
    USER
}

input CartItemWhereInput {
    "Logical AND on all given filters."
    AND: [CartItemWhereInput!]
    "Logical NOT on all given filters combined by AND."
    NOT: [CartItemWhereInput!]
    "Logical OR on all given filters."
    OR: [CartItemWhereInput!]
    id: ID
    "All values containing the given string."
    id_contains: ID
    "All values ending with the given string."
    id_ends_with: ID
    "All values greater than the given value."
    id_gt: ID
    "All values greater than or equal the given value."
    id_gte: ID
    "All values that are contained in given list."
    id_in: [ID!]
    "All values less than the given value."
    id_lt: ID
    "All values less than or equal the given value."
    id_lte: ID
    "All values that are not equal to given value."
    id_not: ID
    "All values not containing the given string."
    id_not_contains: ID
    "All values not ending with the given string."
    id_not_ends_with: ID
    "All values that are not contained in given list."
    id_not_in: [ID!]
    "All values not starting with the given string."
    id_not_starts_with: ID
    "All values starting with the given string."
    id_starts_with: ID
    item: ItemWhereInput
    quantity: Int
    "All values greater than the given value."
    quantity_gt: Int
    "All values greater than or equal the given value."
    quantity_gte: Int
    "All values that are contained in given list."
    quantity_in: [Int!]
    "All values less than the given value."
    quantity_lt: Int
    "All values less than or equal the given value."
    quantity_lte: Int
    "All values that are not equal to given value."
    quantity_not: Int
    "All values that are not contained in given list."
    quantity_not_in: [Int!]
    user: UserWhereInput
}

input ItemWhereInput {
    "Logical AND on all given filters."
    AND: [ItemWhereInput!]
    "Logical NOT on all given filters combined by AND."
    NOT: [ItemWhereInput!]
    "Logical OR on all given filters."
    OR: [ItemWhereInput!]
    description: String
    "All values containing the given string."
    description_contains: String
    "All values ending with the given string."
    description_ends_with: String
    "All values greater than the given value."
    description_gt: String
    "All values greater than or equal the given value."
    description_gte: String
    "All values that are contained in given list."
    description_in: [String!]
    "All values less than the given value."
    description_lt: String
    "All values less than or equal the given value."
    description_lte: String
    "All values that are not equal to given value."
    description_not: String
    "All values not containing the given string."
    description_not_contains: String
    "All values not ending with the given string."
    description_not_ends_with: String
    "All values that are not contained in given list."
    description_not_in: [String!]
    "All values not starting with the given string."
    description_not_starts_with: String
    "All values starting with the given string."
    description_starts_with: String
    id: ID
    "All values containing the given string."
    id_contains: ID
    "All values ending with the given string."
    id_ends_with: ID
    "All values greater than the given value."
    id_gt: ID
    "All values greater than or equal the given value."
    id_gte: ID
    "All values that are contained in given list."
    id_in: [ID!]
    "All values less than the given value."
    id_lt: ID
    "All values less than or equal the given value."
    id_lte: ID
    "All values that are not equal to given value."
    id_not: ID
    "All values not containing the given string."
    id_not_contains: ID
    "All values not ending with the given string."
    id_not_ends_with: ID
    "All values that are not contained in given list."
    id_not_in: [ID!]
    "All values not starting with the given string."
    id_not_starts_with: ID
    "All values starting with the given string."
    id_starts_with: ID
    image: String
    "All values containing the given string."
    image_contains: String
    "All values ending with the given string."
    image_ends_with: String
    "All values greater than the given value."
    image_gt: String
    "All values greater than or equal the given value."
    image_gte: String
    "All values that are contained in given list."
    image_in: [String!]
    "All values less than the given value."
    image_lt: String
    "All values less than or equal the given value."
    image_lte: String
    "All values that are not equal to given value."
    image_not: String
    "All values not containing the given string."
    image_not_contains: String
    "All values not ending with the given string."
    image_not_ends_with: String
    "All values that are not contained in given list."
    image_not_in: [String!]
    "All values not starting with the given string."
    image_not_starts_with: String
    "All values starting with the given string."
    image_starts_with: String
    largeImage: String
    "All values containing the given string."
    largeImage_contains: String
    "All values ending with the given string."
    largeImage_ends_with: String
    "All values greater than the given value."
    largeImage_gt: String
    "All values greater than or equal the given value."
    largeImage_gte: String
    "All values that are contained in given list."
    largeImage_in: [String!]
    "All values less than the given value."
    largeImage_lt: String
    "All values less than or equal the given value."
    largeImage_lte: String
    "All values that are not equal to given value."
    largeImage_not: String
    "All values not containing the given string."
    largeImage_not_contains: String
    "All values not ending with the given string."
    largeImage_not_ends_with: String
    "All values that are not contained in given list."
    largeImage_not_in: [String!]
    "All values not starting with the given string."
    largeImage_not_starts_with: String
    "All values starting with the given string."
    largeImage_starts_with: String
    price: Int
    "All values greater than the given value."
    price_gt: Int
    "All values greater than or equal the given value."
    price_gte: Int
    "All values that are contained in given list."
    price_in: [Int!]
    "All values less than the given value."
    price_lt: Int
    "All values less than or equal the given value."
    price_lte: Int
    "All values that are not equal to given value."
    price_not: Int
    "All values that are not contained in given list."
    price_not_in: [Int!]
    title: String
    "All values containing the given string."
    title_contains: String
    "All values ending with the given string."
    title_ends_with: String
    "All values greater than the given value."
    title_gt: String
    "All values greater than or equal the given value."
    title_gte: String
    "All values that are contained in given list."
    title_in: [String!]
    "All values less than the given value."
    title_lt: String
    "All values less than or equal the given value."
    title_lte: String
    "All values that are not equal to given value."
    title_not: String
    "All values not containing the given string."
    title_not_contains: String
    "All values not ending with the given string."
    title_not_ends_with: String
    "All values that are not contained in given list."
    title_not_in: [String!]
    "All values not starting with the given string."
    title_not_starts_with: String
    "All values starting with the given string."
    title_starts_with: String
    user: UserWhereInput
}

input ItemWhereUniqueInput {
    id: ID
}

input OrderItemWhereInput {
    "Logical AND on all given filters."
    AND: [OrderItemWhereInput!]
    "Logical NOT on all given filters combined by AND."
    NOT: [OrderItemWhereInput!]
    "Logical OR on all given filters."
    OR: [OrderItemWhereInput!]
    description: String
    "All values containing the given string."
    description_contains: String
    "All values ending with the given string."
    description_ends_with: String
    "All values greater than the given value."
    description_gt: String
    "All values greater than or equal the given value."
    description_gte: String
    "All values that are contained in given list."
    description_in: [String!]
    "All values less than the given value."
    description_lt: String
    "All values less than or equal the given value."
    description_lte: String
    "All values that are not equal to given value."
    description_not: String
    "All values not containing the given string."
    description_not_contains: String
    "All values not ending with the given string."
    description_not_ends_with: String
    "All values that are not contained in given list."
    description_not_in: [String!]
    "All values not starting with the given string."
    description_not_starts_with: String
    "All values starting with the given string."
    description_starts_with: String
    id: ID
    "All values containing the given string."
    id_contains: ID
    "All values ending with the given string."
    id_ends_with: ID
    "All values greater than the given value."
    id_gt: ID
    "All values greater than or equal the given value."
    id_gte: ID
    "All values that are contained in given list."
    id_in: [ID!]
    "All values less than the given value."
    id_lt: ID
    "All values less than or equal the given value."
    id_lte: ID
    "All values that are not equal to given value."
    id_not: ID
    "All values not containing the given string."
    id_not_contains: ID
    "All values not ending with the given string."
    id_not_ends_with: ID
    "All values that are not contained in given list."
    id_not_in: [ID!]
    "All values not starting with the given string."
    id_not_starts_with: ID
    "All values starting with the given string."
    id_starts_with: ID
    image: String
    "All values containing the given string."
    image_contains: String
    "All values ending with the given string."
    image_ends_with: String
    "All values greater than the given value."
    image_gt: String
    "All values greater than or equal the given value."
    image_gte: String
    "All values that are contained in given list."
    image_in: [String!]
    "All values less than the given value."
    image_lt: String
    "All values less than or equal the given value."
    image_lte: String
    "All values that are not equal to given value."
    image_not: String
    "All values not containing the given string."
    image_not_contains: String
    "All values not ending with the given string."
    image_not_ends_with: String
    "All values that are not contained in given list."
    image_not_in: [String!]
    "All values not starting with the given string."
    image_not_starts_with: String
    "All values starting with the given string."
    image_starts_with: String
    largeImage: String
    "All values containing the given string."
    largeImage_contains: String
    "All values ending with the given string."
    largeImage_ends_with: String
    "All values greater than the given value."
    largeImage_gt: String
    "All values greater than or equal the given value."
    largeImage_gte: String
    "All values that are contained in given list."
    largeImage_in: [String!]
    "All values less than the given value."
    largeImage_lt: String
    "All values less than or equal the given value."
    largeImage_lte: String
    "All values that are not equal to given value."
    largeImage_not: String
    "All values not containing the given string."
    largeImage_not_contains: String
    "All values not ending with the given string."
    largeImage_not_ends_with: String
    "All values that are not contained in given list."
    largeImage_not_in: [String!]
    "All values not starting with the given string."
    largeImage_not_starts_with: String
    "All values starting with the given string."
    largeImage_starts_with: String
    price: Int
    "All values greater than the given value."
    price_gt: Int
    "All values greater than or equal the given value."
    price_gte: Int
    "All values that are contained in given list."
    price_in: [Int!]
    "All values less than the given value."
    price_lt: Int
    "All values less than or equal the given value."
    price_lte: Int
    "All values that are not equal to given value."
    price_not: Int
    "All values that are not contained in given list."
    price_not_in: [Int!]
    quantity: Int
    "All values greater than the given value."
    quantity_gt: Int
    "All values greater than or equal the given value."
    quantity_gte: Int
    "All values that are contained in given list."
    quantity_in: [Int!]
    "All values less than the given value."
    quantity_lt: Int
    "All values less than or equal the given value."
    quantity_lte: Int
    "All values that are not equal to given value."
    quantity_not: Int
    "All values that are not contained in given list."
    quantity_not_in: [Int!]
    title: String
    "All values containing the given string."
    title_contains: String
    "All values ending with the given string."
    title_ends_with: String
    "All values greater than the given value."
    title_gt: String
    "All values greater than or equal the given value."
    title_gte: String
    "All values that are contained in given list."
    title_in: [String!]
    "All values less than the given value."
    title_lt: String
    "All values less than or equal the given value."
    title_lte: String
    "All values that are not equal to given value."
    title_not: String
    "All values not containing the given string."
    title_not_contains: String
    "All values not ending with the given string."
    title_not_ends_with: String
    "All values that are not contained in given list."
    title_not_in: [String!]
    "All values not starting with the given string."
    title_not_starts_with: String
    "All values starting with the given string."
    title_starts_with: String
    user: UserWhereInput
}

input UserWhereInput {
    "Logical AND on all given filters."
    AND: [UserWhereInput!]
    "Logical NOT on all given filters combined by AND."
    NOT: [UserWhereInput!]
    "Logical OR on all given filters."
    OR: [UserWhereInput!]
    cart_every: CartItemWhereInput
    cart_none: CartItemWhereInput
    cart_some: CartItemWhereInput
    email: String
    "All values containing the given string."
    email_contains: String
    "All values ending with the given string."
    email_ends_with: String
    "All values greater than the given value."
    email_gt: String
    "All values greater than or equal the given value."
    email_gte: String
    "All values that are contained in given list."
    email_in: [String!]
    "All values less than the given value."
    email_lt: String
    "All values less than or equal the given value."
    email_lte: String
    "All values that are not equal to given value."
    email_not: String
    "All values not containing the given string."
    email_not_contains: String
    "All values not ending with the given string."
    email_not_ends_with: String
    "All values that are not contained in given list."
    email_not_in: [String!]
    "All values not starting with the given string."
    email_not_starts_with: String
    "All values starting with the given string."
    email_starts_with: String
    id: ID
    "All values containing the given string."
    id_contains: ID
    "All values ending with the given string."
    id_ends_with: ID
    "All values greater than the given value."
    id_gt: ID
    "All values greater than or equal the given value."
    id_gte: ID
    "All values that are contained in given list."
    id_in: [ID!]
    "All values less than the given value."
    id_lt: ID
    "All values less than or equal the given value."
    id_lte: ID
    "All values that are not equal to given value."
    id_not: ID
    "All values not containing the given string."
    id_not_contains: ID
    "All values not ending with the given string."
    id_not_ends_with: ID
    "All values that are not contained in given list."
    id_not_in: [ID!]
    "All values not starting with the given string."
    id_not_starts_with: ID
    "All values starting with the given string."
    id_starts_with: ID
    name: String
    "All values containing the given string."
    name_contains: String
    "All values ending with the given string."
    name_ends_with: String
    "All values greater than the given value."
    name_gt: String
    "All values greater than or equal the given value."
    name_gte: String
    "All values that are contained in given list."
    name_in: [String!]
    "All values less than the given value."
    name_lt: String
    "All values less than or equal the given value."
    name_lte: String
    "All values that are not equal to given value."
    name_not: String
    "All values not containing the given string."
    name_not_contains: String
    "All values not ending with the given string."
    name_not_ends_with: String
    "All values that are not contained in given list."
    name_not_in: [String!]
    "All values not starting with the given string."
    name_not_starts_with: String
    "All values starting with the given string."
    name_starts_with: String
    password: String
    "All values containing the given string."
    password_contains: String
    "All values ending with the given string."
    password_ends_with: String
    "All values greater than the given value."
    password_gt: String
    "All values greater than or equal the given value."
    password_gte: String
    "All values that are contained in given list."
    password_in: [String!]
    "All values less than the given value."
    password_lt: String
    "All values less than or equal the given value."
    password_lte: String
    "All values that are not equal to given value."
    password_not: String
    "All values not containing the given string."
    password_not_contains: String
    "All values not ending with the given string."
    password_not_ends_with: String
    "All values that are not contained in given list."
    password_not_in: [String!]
    "All values not starting with the given string."
    password_not_starts_with: String
    "All values starting with the given string."
    password_starts_with: String
    resetToken: String
    resetTokenExpiry: Float
    "All values greater than the given value."
    resetTokenExpiry_gt: Float
    "All values greater than or equal the given value."
    resetTokenExpiry_gte: Float
    "All values that are contained in given list."
    resetTokenExpiry_in: [Float!]
    "All values less than the given value."
    resetTokenExpiry_lt: Float
    "All values less than or equal the given value."
    resetTokenExpiry_lte: Float
    "All values that are not equal to given value."
    resetTokenExpiry_not: Float
    "All values that are not contained in given list."
    resetTokenExpiry_not_in: [Float!]
    "All values containing the given string."
    resetToken_contains: String
    "All values ending with the given string."
    resetToken_ends_with: String
    "All values greater than the given value."
    resetToken_gt: String
    "All values greater than or equal the given value."
    resetToken_gte: String
    "All values that are contained in given list."
    resetToken_in: [String!]
    "All values less than the given value."
    resetToken_lt: String
    "All values less than or equal the given value."
    resetToken_lte: String
    "All values that are not equal to given value."
    resetToken_not: String
    "All values not containing the given string."
    resetToken_not_contains: String
    "All values not ending with the given string."
    resetToken_not_ends_with: String
    "All values that are not contained in given list."
    resetToken_not_in: [String!]
    "All values not starting with the given string."
    resetToken_not_starts_with: String
    "All values starting with the given string."
    resetToken_starts_with: String
}


scalar DateTime
